              	; --------------------------------------
              	; zasm: assemble "0-test.asm"
              	; date: 2021-03-29 00:14:57
              	; --------------------------------------


              	; System Info
1C2000:         	SYS_CLOCK	.equ	1843200
              	; I/O Ports
0000:         	PORT_CTC	.equ	0x00
0010:         	PORT_UART	.equ	0x10
              	
0000:         	.org 0x0000
              	; start
              	;   Reset Vector
0000:         	start:
              		; cpu init
0000: F3      		di
0001: 31FFFF  		ld sp, 0xFFFF
0004: 3E00    		ld a, 0x00
0006: ED47    		ld i, a
0008: ED5E    		im 2
000A: FB      		ei
              		; device init
000B: CD6600  		call uart_init
              		; welcome string
000E: 21A400  		ld hl, string_startup
0011: CD8F00  		call uart_tx_str
              		; main loop
0014: CD5000  		call main
0017: 76      		halt
              	
              	
0018: FFFFFFFF	.org 0x0030
001C: FF...   	
              	; int
              	;   Interrupt Service Routine
0030:         	int_uart:
0030: 5400    		defw isr_uart
              	
              	
              	
              	
0032: FFFFFFFF	.org 0x0050
0036: FF...   	
              	; main
              	;   Main Program loop
0050:         	main:
              		;call uart_rx_wait
              		;call uart_tx_char
              	
0050: C35000  		jp main
0053: C9      		ret
              	
0054:         	isr_uart:
0054: F3      		di
0055: F5      		push af
              		; IIR: check if received
0056: DB12    		in a, (PORT_UART+2)
0058: E604    		and 0x04	; interrupt id: received data available
005A: CA6200  		jp z, isr_uart_end	; wrong interrupt! skip
              		; get char from uart controller (clears interrupt)
005D: DB10    		in a, (PORT_UART)
              		; send received char back
005F: CD8300  		call uart_tx_char
0062:         	isr_uart_end:
              		; return
0062: F1      		pop af
0063: FB      		ei
0064: ED4D    		reti
              	
              	
              	
              	
              	; ### 16c550 UART Driver ###
              	; ##########################
              	; uart_init
              	;   initializes uart chip
0066:         	uart_init:
              		; LCR: Set DLAB Bit for Baud Rate
0066: 3E80    		ld a, 0x80
0068: D313    		out (PORT_UART+3), a
              		; Set Baud Rate
006A: 3E0C    		ld a, 0x0C
006C: D310    		out (PORT_UART), a
006E: 3E00    		ld a, 0x00
0070: D311    		out (PORT_UART+1), a
              		; LCR: 8 bit, one stop, no parity, DLAB off
0072: 3E03    		ld a, 0x03
0074: D313    		out (PORT_UART+3), a
              		; IER: Receiver Interrupt
0076: 3E01    		ld a, 0x01
0078: D311    		out (PORT_UART+1), a
              		; FCR: FIFO off
007A: 3E00    		ld a, 0x00
007C: D312    		out (PORT_UART+2), a
              		; MCR: Deactivate all Pins
007E: 3E00    		ld a, 0x00
0080: D314    		out (PORT_UART+4), a
              		; return from routine
0082: C9      		ret
              	
              	
              	; uart_tx_char
              	;   sends a single char in a
0083:         	uart_tx_char:
0083: F5      		push af
0084:         	uart_tx_char_loop:
0084: DB15    		in a, (PORT_UART+5)	; 0x15
0086: E640    		and 0x40
0088: CA8400  		jp z, uart_tx_char_loop
              		; ready to send char now
008B: F1      		pop af
008C: D310    		out (PORT_UART), a
              		; return from subroutine
008E: C9      		ret
              	
              	
              	; uart_tx_str
              	;   sends a 0 terminated string. Pointer in hl.
008F:         	uart_tx_str:
008F: 7E      		ld a, (hl)
0090: F600    		or 0
0092: C8      		ret z	; end of string? Yes: return
0093: CD8300  		call uart_tx_char
0096: 23      		inc hl	; next character
0097: C38F00  		jp uart_tx_str
              	
              	
              	; uart_rx_wait
              	;   waits until single character received. Character in a
009A:         	uart_rx_wait:
009A: DB15    		in a, (PORT_UART+5)
009C: E601    		and 0x01			; received char?
009E: CA9A00  		jp z, uart_rx_wait
00A1: DB10    		in a, (PORT_UART)	; get char
00A3: C9      		ret
              	
              	
              	; Some constants like strings and stuff
00A4: 53797374	string_startup:	.db "System initialized !", 0x0D, 0x0A, 0x00
00A8: 656D2069	
00AC: 6E697469	
00B0: 616C697A	
00B4: 65642021	
00B8: 0D0A00  	


; +++ segments +++

#CODE          = $0000 =     0,  size = $00BB =   187

; +++ global symbols +++

PORT_CTC          = $0000 =     0          0-test.asm:4 (unused)
PORT_UART         = $0010 =    16          0-test.asm:5
SYS_CLOCK         = $2000 =1843200          0-test.asm:2 (unused)
_end              = $00BB =   187          0-test.asm:6 (unused)
_size             = $00BB =   187          0-test.asm:6 (unused)
int_uart          = $0030 =    48          0-test.asm:31 (unused)
isr_uart          = $0054 =    84          0-test.asm:47
isr_uart_end      = $0062 =    98          0-test.asm:58
main              = $0050 =    80          0-test.asm:40
start             = $0000 =     0          0-test.asm:10 (unused)
string_startup    = $00A4 =   164          0-test.asm:133
uart_init         = $0066 =   102          0-test.asm:71
uart_rx_wait      = $009A =   154          0-test.asm:124
uart_tx_char      = $0083 =   131          0-test.asm:98
uart_tx_char_loop = $0084 =   132          0-test.asm:100
uart_tx_str       = $008F =   143          0-test.asm:113


total time: 0.0043 sec.
no errors
